<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_ncz_l1t_35">
  <title>cue-rabbit.fix.sh</title>
  <body>
<codeblock>#!/usr/bin/env bash
set -x

rm ansible.cfg.j2
rm ssh-config.j2
rm rabbitmq-server.service.j2
rm ansible.cfg
rm ssh-config
rm rabbitmq-server.service
rm cue-rabbit-fix-configure.yml
rm cue-rabbit-fix.yml

cat > ansible.cfg.j2 &lt;&lt; EOF
[defaults]
system_errors = False
host_key_checking = False
ask_sudo_pass = False
[ssh_connection]
ssh_args = -o ControlPersist=15m -o ConnectTimeout=120 -F {{ playbook_path_output.stdout }}/ssh-config -q
scp_if_ssh = True
ControlPath ~/.ssh/ansible-%r@%h:%p
EOF

cat > ssh-config.j2 &lt;&lt; EOF
Host *
ServerAliveInterval 60
TCPKeepAlive yes
ProxyCommand ssh -q -A stack@{{ controller_node_ip }} nc %h %p
ControlMaster auto
ControlPath ~/.ssh/ansible-%r@%h:%p
ControlPersist 8h
User stack
IdentityFile /home/stack/.ssh/id_rsa
EOF

cat > rabbitmq-server.service.j2 &lt;&lt; EOF
[Unit]
Before = rc-local.service
Description = RabbitMQ Messaging Server
After = network.target

[Service]
Restart = on-failure
Type = simple
User = rabbitmq
SyslogIdentifier = rabbitmq
LimitNOFILE = 65536
PermissionsStartOnly=true
ExecStartPre=-/bin/mkdir /var/run/rabbitmq
ExecStartPre=/bin/chown -R rabbitmq:rabbitmq /var/run/rabbitmq/
ExecStart = /usr/sbin/rabbitmq-server
ExecStartPost = /usr/lib/rabbitmq/bin/rabbitmq-server-wait
ExecStop = /usr/sbin/rabbitmqctl stop

[Install]
WantedBy = multi-user.target
EOF

cat > cue-rabbit-fix-configure.yml &lt;&lt; EOF
---
- hosts: localhost
  connection: local
  tasks:
    - name: cue-rabbit-fix-configure | Ensure OpenStack credentials are available
      fail: msg="Please ensure OpenStack credentials have been sourced"
      when: lookup('env', 'OS_AUTH_URL') == ""
    - name: cue-rabbit-fix-configure | Get working directory
      shell: pwd
      register: playbook_path_output
    - name: cue-rabbit-fix-configure | Create Ansible.cfg
      template:
        src: ansible.cfg.j2
        dest: "{{ playbook_path_output.stdout }}/ansible.cfg"
    - name: cue-rabbit-fix-configure | Get Cue control-plane ip in SVC network
      set_fact: controller_node_ip="{{ item.1.addr }}"
      with_subelements:
        - servers
        - interfaces
      when: item.1.network == "SVC"
    - name: cue-rabbit-fix-configure | Create ssh-config
      template:
        src: ssh-config.j2
        dest: "{{ playbook_path_output.stdout }}/ssh-config"
EOF

cat > cue-rabbit-fix.yml &lt;&lt; 'EOF'
---
- hosts: localhost
  vars:
    ansible_python_interpreter: /opt/stack/service/ansible/venv/bin/python
    os_auth_url: "{{ lookup('env','OS_AUTH_URL') }}"
    os_region_name: "{{ lookup('env','OS_REGION_NAME') }}"
    os_endpoint_type: "{{ lookup('env','OS_ENDPOINT_TYPE') | default('internalURL', true) }}"
    os_username: "{{ lookup('env','OS_USERNAME') }}"
    os_password: "{{ lookup('env','OS_PASSWORD') }}"
    os_project_name: "{{ lookup('env','OS_PROJECT_NAME') }}"
    os_user_domain_name: "{{ lookup('env','OS_USER_DOMAIN_NAME') | default('Default', true) }}"
    os_project_domain_name: "{{ lookup('env','OS_PROJECT_DOMAIN_NAME') | default('Default', true) }}"
    broker_network_name: "{{ global.pass_through.guest_network_group | default('MSGAAS_NET_BROKER') }}"
  connection: local
  tasks:
    - name: cue-rabbit-fix | Get rabbitmq broker ip's
      shell: >
        /opt/stack/service/ansible/venv/bin/nova list | grep -iE 'cue\[([0-9a-f\-]){36}\]\.node\[[0-9]+\]' | cut -d '|' -f7 | awk -F'{{ broker_network_name }}=' '{gsub(/[ \t]+$/, "", $2); print $2}'
      environment: &amp;OS_ENV
        OS_AUTH_URL: "{{ os_auth_url }}"
        OS_ENDPOINT_TYPE: "{{ os_endpoint_type }}"
        OS_USER_DOMAIN_NAME: "{{ os_user_domain_name }}"
        OS_USERNAME: "{{ os_username }}"
        OS_PASSWORD: "{{ os_password }}"
        OS_PROJECT_DOMAIN_NAME: "{{ os_project_domain_name }}"
        OS_PROJECT_NAME: "{{ os_project_name }}"
        OS_CACERT: /etc/ssl/certs/ca-certificates.crt
        OS_IDENTITY_API_VERSION: 3
        OS_AUTH_VERSION: 3
      register: rabbit_broker_ips
    - name: cue-rabbit | get_rabbit_instances | Add Rabbitmq broker ip's to in-memorry inventory
      add_host:
        groups: brokers
        hostname: "{{ item }}"
      with_items: rabbit_broker_ips.stdout_lines

- hosts: brokers
  sudo: yes
  tasks:
    - name: cue-rabbit-fix | Configure rabbitmq systemd
      template:
        src: rabbitmq-server.service.j2
        dest: "/lib/systemd/system/rabbitmq-server.service"
      register: rabbit_config
    - name: cue-rabbit-fix | Reload systemd daemon
      sudo: yes
      command: systemctl daemon-reload
      when: rabbit_config.changed == True
    - name: cue-rabbit-fix | Start RabbitMQ
      service:
        name=rabbitmq-server
        state=started
      ignore_errors: True

EOF

source ~/user.osrc
ansible-playbook -i hosts/localhost cue-rabbit-fix-configure.yml -vvvv
ansible-playbook -i hosts/localhost cue-rabbit-fix.yml -vvvv

rm ansible.cfg.j2
rm ssh-config.j2
rm rabbitmq-server.service.j2
rm ansible.cfg
rm ssh-config
rm rabbitmq-server.service
rm cue-rabbit-fix-configure.yml
rm cue-rabbit-fix.yml</codeblock>
  </body>
</topic>
