<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_vsf_hnh_ts">
  <title>HPE Helion Development Platform 2.0: Install the Database Service</title>
  <body>
    <section><title>Contents</title>
      <ul>
        <li><xref href="#topic_vsf_hnh_ts/prerequisites" format="dita">Prerequisites</xref></li>
        <li><xref href="#topic_vsf_hnh_ts/dbaas_installation" format="dita">Install the Database
            Service</xref></li>
        <li><xref href="#topic_vsf_hnh_ts/configure_haproxy" format="dita">Configure
          HAProxy</xref></li>
        <li><xref href="#topic_vsf_hnh_ts/uninstall" format="dita">Prepare Database Service for reinstallation</xref></li>
      </ul></section>
    <section id="prerequisites">
      <title>Prerequisites</title>
      <ul>
        <li>The HDP Installer 2.0, also known as HDPI, must already <xref
            href="devplatform_install_platform.dita#topic_gly_xmh_ts">be installed</xref>.</li>
        <li>Populate the <xref href="cloud/cloud_database.dita">Database section</xref> of the
            <codeph>clouds.yaml</codeph> file.</li>
        <li>Configure <xref href="install_dbaas_configureAvailabilityZones.dita#topic_hhh_lm4_xt"
            >Availability Zones</xref>, if your installation requires them.</li>
        <li><xref href="install_dbaas_checkQuotas.dita#topic_sjz_wm4_xt">Check your quotas</xref> to
          ensure you have sufficient space, particularly if your installation is configured for high
          availability.</li>
      </ul><note type="attention">Control plane backups are currently not available due to
        an incorrect file path. To fix this issue, <xref href="../database/database-backup-controlplane.dita">perform the workaround</xref>.</note>
    </section>
    <section id="dbaas_installation">
      <title>Install the Database Service </title>
      <ol id="ol_xct_5dz_nt">
        <li>SSH into the HP Helion OpenStack lifecycle manager.</li>
        <li>Source the Virtual
          Environment.<codeblock>source /opt/stack/venv/&lt;dev_platform_installer-devplat_installer-#.#.#&gt;/bin/activate</codeblock></li>
        <li>Install the database service. <ol>
            <li>If you <xref href="install_offline.dita#topic_w25_hqp_xt">pre-downloaded</xref> the
              installation files:
                <codeblock>cd <i>&lt;directory where the pre-downloaded file is></i>
openstack --os-cloud mycloud hdpi database install <i>&lt;filename></i></codeblock><note>Make
                sure you run the installer from the <b>same</b> directory where the installation
                files are saved. If the installer cannot find a file with the name you provided in
                the local directory, it will attempt to download the files again. </note></li>
            <li>If you did not pre-download the file: <ol id="ol_fcs_t5r_yt">
                <li>Find the most recent version of the file. Note that this command provides only a
                  quick list of recent files; there are <xref
                    href="install_listOptions.dita#listContent">more complete listing options</xref>
                  available that include installation
                  status.<pre>openstack --os-cloud mycloud hdpi list</pre>The output should look
                  similar
                  to:<pre>+----------------------------+----------------+-----------+------------+
| service                    | id             | version   | state      |
+----------------------------+----------------+-----------+------------+
| Helion Code Engine         | wscatalog.2776 | 1.0.0     | available  |
| als                        | wscatalog.2765 | 2.0.0.539 | available  |
| als                        | wscatalog.2800 | 2.0.0.548 | available  |
| database                   | wscatalog.2762 | 2.0.0.32  | available  |
<b>| database                   | wscatalog.2803 | 2.0.0.37  | available  |</b>
| messaging                  | wscatalog.2761 | 1.0.0     | available  |
| messaging                  | wscatalog.2796 | 1.0.0.165 | available  |
+----------------------------+----------------+-----------+------------+</pre></li>
                <li>Find the<b> ID number</b> of the most recent version of the service (the highest
                  ID number for that service).</li>
                <li>If desired, inspect the installation files for size, version, and other detailed
                  information.<codeblock>openstack hdpi show wscatalog.#### --os-cloud mycloud</codeblock></li>
                <li>Begin the download and
                  installation:<codeblock>openstack hdpi database install wscatalog.#### --os-cloud mycloud</codeblock></li>
              </ol><note> Downloading may take a significant amount of time; depending on network
                traffic, it could take 20-90 minutes.</note></li>
            <li>During installation, this command will generate output similar to the following:
              <codeblock>Database is (downloaded)
Database is already (available)
Database is already configured
Launching stack...
Stack trove creating
Completed installing database
$</codeblock></li>
          </ol></li>
      </ol>
    </section>
    <section id="configure_haproxy"><sectiondiv><p><b>Configure HAProxy</b></p>The following steps
        will configure HAProxy to receive and forward HTTP requests to the VM that hosts the REST
        API endpoint for the Database Service.
<ol>
          <li> Identify all the API server IPs on the SVC network. <p>
              <codeblock>openstack server list --os-cloud mycloud | awk '/trove[0-9]*_api/{ print $4,"\t", substr($8,5) }' </codeblock>
            </p></li>
          <li> Identify the Virtual IP used to load balance the HPE Helion OpenStack
            services.<codeblock>openstack endpoint list --os-cloud mycloud | grep database | grep public | awk '{ print $14 }' | awk -F':' '{ print $2 }' | awk -F'/' '{ print $3 }' </codeblock></li>
          <li> Update configuration of the HPE Helion OpenStack controller nodes. The following
            commands are run from the HLM deployer node.<ol>
              <li>Navigate to the following directory.
                <codeblock>cd ~/helion/my_cloud/config/haproxy/</codeblock></li>
              <li>Open the <codeph>haproxy.cfg.j2</codeph> file for editing. Add the following lines
                to the Custom Configuration section at the bottom of the
                  file.<codeblock>listen trove_api
    bind &lt;<i>virtual IP from step 2</i>&gt;:8779 ssl crt <i>&lt;path to certificate file/certFileName&gt; </i>
    option httpchk GET /
    server trove-trove&lt;<i>n</i>>_api-&lt;<i>uniqueid</i>> &lt;<i>API server n's IP Address</i>> check inter 2000 rise 2 fall 5
    server trove-trove&lt;<i>n+1</i>>_api-&lt;<i>uniqueid</i>> &lt;<i>API server n+1's IP Address</i>> check inter 2000 rise 2 fall 5
    server trove-trove&lt;<i>n+2</i>>_api-&lt;<i>uniqueid</i>> &lt;<i>API server n+2's IP Address</i>> check inter 2000 rise 2 fall 5</codeblock><note>The
                  last line in the codeblock should be repeated once for <b>each</b> API server
                  identified in step 1. </note><note>The <codeph>ssl cert</codeph> information in
                  the <b>bind</b> statement only applies if SSL has been enabled for public
                  endpoints. If SSL has not been enabled, omit this section of the statement. To
                  locate the filepath, navigate to
                    <codeph>~/helion/hos/ansible/roles/tls-frontend/defaults/main.yml</codeph> and
                  find the value of the <codeph>frontend_server_cert_directory</codeph> parameter.
                  To find the file name, open the
                    <codeph>/home/stack/helion/my_cloud/definition/data/network_groups.yml</codeph>
                    file and find the value for the <codeph>cert-file</codeph> parameter. </note></li> </ol></li>
              <li>Update firewall rules on each controller node.<ol id="ol_bly_1gw_45">
              <li>Open the ~/helion/my_cloud/definition/data/firewall_rules.yml file for
                editing.</li>
              <li>Add this code block to allow access to the DBaaS port (8779) through the firewall.
                <codeblock>    - name: DBAAS
      network-groups:
      - EXTERNAL-API
      - MANAGEMENT
      rules:
      - type: allow
        remote-ip-prefix: 0.0.0.0/0
        port-range-min: 8779
        port-range-max: 8779
        protocol: tcp</codeblock></li>
            </ol></li>
              <li>Persist the updated configuration
                files.<codeblock>cd ~/helion/hos/ansible 
git add -A
git commit -m "updated haproxy for database service and firewall for dbaas added"</codeblock></li>              
              <li>Run the configuration processor.
                <codeblock>cd ~/helion/hos/ansible 
ansible-playbook -i hosts/localhost config-processor-run.yml </codeblock></li>
              <li>Create the deployment directory structure.
                <codeblock>cd ~/helion/hos/ansible 
ansible-playbook -i hosts/localhost ready-deployment.yml </codeblock></li>
              <li>Update the HAProxy
                configuration.<codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts FND-CLU-reconfigure.yml</codeblock></li>
          <li>Run the <codeph>osconfig-iptables-deploy.yml</codeph> playbook to update your
            iptable
            rules.<codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts osconfig-iptables-deploy.yml</codeblock></li>
          
        </ol></sectiondiv></section>
    <section id="uninstall"><title>Prepare Database Service for reinstallation</title> The following
      steps will reset elements of the Database service in preparation for reinstallation. <ol>
        <li>List all swift containers:
          <codeblock>$ source service.osrc
$ swift list</codeblock></li>
        <li>Note if any of the following containers are present:
          <codeblock>DBaaS-heat-templates
dbaas-horizon-ui-installer
dbaas-ops-console-ui-installer
hdp
sherpa-cache
trove-database0_backup_container-lavvqarpkhnl
trove-database0_backup_container-n7i2n5n4ntkf</codeblock></li>
        <li>Delete any of the above containers if they are present:
          <codeblock>swift delete DBaaS-heat-templates
...</codeblock></li>
      </ol>
      <note>The Database Service will not install correctly if the endpoint is configured with a fully-qualified domain name (FQDN). The following workaround will allow the endpoint to use a FQDN:
        <ol>
          <li>Open <codeph>/home/stack/helion/my_cloud/config/neutron/dhcp_agent.ini.j2</codeph> in a text editor.</li>
          <li>Add the following line:<codeblock>dnsmasq_dns_servers = &lt;ip address of dns server #1&gt;, &lt;ip address of dns server #2&gt;</codeblock></li>
          <li>Enter the following commands to update the configuration:
            <codeblock>cd ~/helion/hos/ansible
git add -A
git commit -m "My config or other commit message"
              
ansible-playbook -i hosts/localhost config-processor-run.yml
ansible-playbook -i hosts/localhost ready-deployment.yml
              
cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts neutron-reconfigure.yml</codeblock></li>
        </ol>
      </note></section>
  </body>
</topic>
