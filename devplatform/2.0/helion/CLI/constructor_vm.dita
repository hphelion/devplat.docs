<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd" ><topic xml:lang="en-us" id="topic11989">
    <title>HPE Helion Development Platform 2.0: HPE Application Lifecycle Service (ALS) Constructor Virtual Machine</title>
    <body>
        <p>The Constructor VM is normally a short-lived virtual machine that handles the provisioning of the Application Lifecycle Service (ALS) in an HPE Helion <tm tmtype="reg">OpenStack</tm> public or private cloud. It can also function in a destructor mode to simplify the tear-down of the ALS platform-as-a-system.</p>
        <p>Nearly all management tasks for the Constructor VM (CVM) are easily performed from the Horizon web-based management console. Horizon performs a <xref href="http://docs.openstack.org/cli-reference/content/novaclient_commands.html" scope="external" format="html" >Nova</xref> call with <xref href="http://cloudinit.readthedocs.org/en/latest/" scope="external" format="html" >cloud-init</xref> <xref href="http://docs.openstack.org/user-guide/content/inserting_userdata.html" scope="external" format="html" >configuration data</xref> to trigger the Helion ALS construction.  The OpenStack metadata service is used to communicate ALS construction status back to the Horizon UI.</p>
        <p>There are a few features and <xref type="section" href="#topic11989/troubleshooting">troubleshooting</xref> options, however, that cannot be managed from within the Horizon UI. Currently, it does not support:</p>
        <ul>
            <li>
                <xref type="section" href="#topic11989/addservices">adding services</xref> to an existing system.</li>
            <li>
                <xref type="section" href="#topic11989/deanodes">adding DEA nodes</xref> to an existing system.</li>
        </ul>
        <p>The CVM self-terminates by default. This final self-termination action can be <xref type="section" href="#topic11989/disable">overridden</xref> by adding a configuration file option. This allows for system troubleshooting and examination of the construction <xref type="section" href="#topic11989/logfile">log file</xref> on the CVM.</p>
        <section id="cvm-boot-methodology"> <title>CVM Boot Methodology</title>
            <p>The CVM may be launched using several different methods. This flexibility allows you to choose the best method for initial ALS Helion system construction. The methods are as follows:</p>
            <ol>
                <li>Use the <xref type="section" href="#topic11989/consoleboot">Horizon wizard</xref>. This is the simplest method.</li>
                <li>Use a Nova CLI and a <i>cloud-init</i> configuration file (JSON).  This allows for reproducible configuration, growth options, and troubleshooting. </li>
                <li>Boot the CVM without a <i>cloud-init</i> configuration file in a Helion <xref type="section" href="#topic11989/privatecloud">private cloud</xref>.  After SSH login to the CVM the user will be prompted to run a command line script to create (and possibly edit) an .ini style configuration file.</li>
                <li>Boot the CVM without a <i>cloud-init</i> configuration file in Helion  <xref type="section" href="#topic11989/publiccloud">public cloud</xref>. After SSH login to the CVM the user will be prompted to run a command line script that will in turn launch the ALS Helion construction.  This allows a user to produce a Helion ALS system that consumes minimal resources in the public cloud. </li>
            </ol>
        </section>
        <section id="consoleboot"> <title>Method #1: Using the Helion Wizard</title>
            <p>Creating a cluster via the Horizon wizard is by far the simplest option. The wizard prompts the user for configuration options and passes the configuration and environment variable values to the CVM.</p>
            <ol>
                <li>The user creates a cluster using the ALS Horizon wizard.</li>
                <li>Upon completion of the ALS Horizon wizard, the CVM boots.</li>
                <li>The <i>/etc/rc.local</i> script runs and detects the <i>cloud-init</i> file (JSON) generated by the input that was provided to the Horizon wizard.</li>
                <li>The <i>cloud-init</i> JSON file is converted to <i>cluster.conf</i>, which is in a Python <xref href="https://docs.python.org/2/library/configparser.html" scope="external" format="html" >ConfigParser</xref> format.</li>
                <li>The assemble.py script runs using the values in <i>cluster.conf</i> to build the Helion ALS system.</li>
                <li>The CVM terminates. (Unless the termination is <xref type="section" href="#topic11989/disable">overridden</xref>.)</li>
            </ol>
        </section>
        <section id="configfile"> <title>Method #2: Boot the VM using the Configuration File</title>
            <p>This method passes the configuration and environment variable values via a <xref href="http://cloudinit.readthedocs.org/en/latest/" scope="external" format="html" >
                <i>cloud-init</i>
            </xref> JSON file created prior to booting the CVM.</p>
            <ol>
                <li>Perform a <i>nova</i> call with a <i>cloud-init</i> JSON file.</li>
                <li>The CVM boots.</li>
                <li>The <i>/etc/rc.local</i> script runs and detects the <i>cloud-init</i> file.</li>
                <li>The <i>cloud-init</i> file is automatically converted from JSON to ConfigParser format and renamed <i>cluster.conf</i>.</li>
                <li>The <i>assemble.py</i> script runs, using the values contained in <i>cluster.conf</i> to build the Helion ALS system.</li>
            </ol>
            <p>Here is an example of the <i>cloud-init</i> JSON file used for Helion ALS construction. There are three sections of key-value pairs related to ALS (PaaS), OpenStack (IaaS), and Control of the construction process. This configuration file is passed to the CVM during the boot process.</p>
            <codeblock>{
    "ALS": {
        "admin_email": "admin@example.com",
        "admin_org": "org1",
        "admin_password": "adminpass1",
        "cluster_title": "stack1", 
        "cluster_prefix": "s1",
        "dea_count": "1",
        "router_count": "0",
        "services": "mysql,rabbitmq",
        "services_on_core": "False",
        "upstream_proxy": "",
        "http_proxy": "",
        "https_proxy": ""
    },
    "Openstack": {
        "auth_url": "https://region-b.geo-1.identity.hpcloudsvc.com:35357/v2.0",
        "az": "az1",
        "block_mount": "/block_storage",
        "core_size": "standard.small",
        "core_volume_size": "0",
        "dea_size": "standard.medium",
        "image_id": "d782c03d-9666-4639-a62f-53b376880120",
        "image_password":"",
        "keypair_name": "keypair1",
        "network_id": "0ec616d0-872d-424b-ac27-3b5db55d7fa0",
        "region": "region-a.geo-1",
        "router_id": "ab5f7adf-e506-422f-b724-07b0010f1190",
        "router_size": "standard.medium",
        "service_size": "standard.medium",
        "service_volume_size": "0",
        "os_database_instance_id": "12345",
        "os_database_flavor_id": "1",
        "os_database_volume_size": "10",
        "tenant_id": "12345678901234", 
        "token": "HP_..."
    },
    "Control": {
        "delete_cluster": "False",
        "grow_cluster": "False",
        "delete_database": "False",
        "terminate_constructor": "True"
    }
}</codeblock>
        </section>
        <section id="privatecloud"> <title>Method #3: Boot Without a <i>cloud-init</i> Configuration File (Helion private cloud)</title>
            <p>During the boot process the CVM will detect that a <xref href="http://cloudinit.readthedocs.org/en/latest/" scope="external" format="html" >
                <i>cloud-init</i>
            </xref> configuration file is not present. When the user logs in via SSH, the CVM will prompt the user to run a script which will create a configuration file. This prompt is provided by the system's Message of the Day (motd).</p>
            <p>
                <note>Using this method requires the user to set up the network to the CVM properly,
                    including all routing information, security groups, ssh keys, accessible IP
                    addresses, and so on.</note>
            </p>
            <ol>
                <li>Create an instance of the ALS Installer and boot it manually, or perform a <i>Nova</i> boot without providing a <i>cloud-init</i> configuration file.</li>
                <li>The CVM boots.</li>
                <li>The <i>/etc/rc.local</i> script runs and does not detect a <i>cloud-init</i> configuration file.</li>
                <li>The user logs into the CVM via SSH.</li>
                <li>The Message of the Day (MOTD) prompts the user to run <i>configure.py</i> to produce a <i>cluster.conf</i> .ini style configuration file in ConfigParser format.</li>
                <li>The user has the option to manually edit the <i>cluster.conf</i> file.</li>
                <li>The <i>assemble.py</i> script runs automatically, using the values contained in the <i>cluster.conf</i> file to build the Helion ALS system.</li>
                <li>The CVM terminates. (Unless the termination is <xref type="section" href="#topic11989/disable">overridden</xref>.)</li>
            </ol>
        </section>
        <section id="publiccloud"> <title>Method #4: Boot Without a Configuration File </title>
            <p>During the boot process the CVM will detect that a configuration file is not present.
                When the user logs in, the CVM will prompt the user to run a script which will
                create a configuration file.</p>
            <note>Using this method requires the user to set up the network to the CVM properly,
                including all routing information, security groups, ssh keys, accessible IP
                addresses, and so on.</note>
            <ol>
                <li>Create an VM instance using the ALS Installer image and boot it manually, or perform a <i>Nova</i> boot without providing a <i>cloud-init</i> configuration file.</li>
                <li>The CVM boots.</li>
                <li>During the boot process, the <i>/etc/rc.local</i> script runs and does not detect a <i>cloud-init</i> configuration file.</li>
                <li>When the user logs in via SSH, the Message of the Day (MOTD) prompts the user to run <i>trial_configure.py</i> to produce a <i>cluster.conf</i> .ini style configuration file in ConfigParser format.</li>
                <li>The <i>assemble.py</i> script runs automatically and applies the values contained in the <i>cluster.conf</i> file.</li>
                <li>The CVM terminates. (Unless the termination is <xref type="section" href="#topic11989/disable">overridden</xref>.)</li>
            </ol>
            <p>This is an example of the ConfigParser file format options that are generated for the Quick Start Trial:</p>
            <codeblock>[Openstack
auth_url = https://region-b.geo-1.identity.hpcloudsvc.com:35357/v2.0
username = 
password = 
tenant_id = 
region = region-b.geo-1
az = az1
keypair_name = 
network_id = 
image_id = 
image_password = 
core_size = standard.medium
router_size = standard.medium
dea_size = standard.medium
service_size = standard.medium
core_volume_size = 0
service_volume_size = 0
block_mount = /block_storage

[ALS]
cluster_title = 
cluster_prefix = 
router_count = 0
dea_count = 0
services = mysql
admin_email = admin@example.com
admin_password = 
admin_org = als
services_on_core = True</codeblock>
        </section>
        <section id="deanodes"> <title>DEA Growth Configuration File Example</title>
            <p>This example adds more DEA nodes to an existing cluster.</p>
           
                <note type="caution">The <i>dea_count</i> value is the number of DEAs to be <b>added</b> in this
                    growth mode; do not count any DEAs that already exist.</note>
                       <codeblock>
[Openstack
auth_url = https://region-b.geo-1.identity.hpcloudsvc.com:35357/v2.0
username = 
password = 
tenant_id = 
region = region-b.geo-1
image_id = 
image_password = 
dea_size = standard.medium
service_size = standard.medium

[ALS]
cluster_prefix = growth
dea_count = 1
services = 

[Control]
grow_cluster = True
</codeblock>
        </section>
        <section id="addservices"> <title>Service Growth Configuration File Example</title>
            <p>This example adds more services to the cluster.</p>
            <note type="caution">The comma-separated values in the list of services contain only the services to be <b>added</b> in this growth mode. Do not list services that already exist.</note>
            <codeblock>[Openstack
auth_url = https://region-b.geo-1.identity.hpcloudsvc.com:35357/v2.0
username = 
password = 
tenant_id = 
region = region-b.geo-1
image_id = 
image_password = 
dea_size = standard.medium
service_size = standard.medium

[ALS]
cluster_prefix = growth
dea_count = 0
services = filesystem,redis

[Control]
grow_cluster = True</codeblock>
        </section>
        <section id="troubleshooting"> <title>Troubleshooting</title>
            <table>
                <tgroup cols="3">
                    <colspec colname="col1"/>
                    <colspec colname="col2"/>
                    <colspec colname="col3"/>
                    <tbody>
                        <row>
                            <entry>
                                <b>Failure Condition</b>
                            </entry>
                            <entry>
                                <b>Description</b>
                            </entry>
                            <entry>
                                <b>Resolution</b>
                            </entry>
                        </row>
                        <row>
                            <entry>Error message when clicking the Create Cluster button in the Horizon dashboard.</entry>
                            <entry>Danger: An error occurred. Please try again later.</entry>
                            <entry>
                                The Database service is installed, but the API is not responding. Try loading the Database Instances tab in Horizon. If the Database Instances tab fails to load, repair the Database Service.</entry>
                        </row>
                        <row>
                            <entry>Error message when clicking the final button in the Create Cluster Wizard in the Horizon UI.</entry>
                            <entry>Danger: An error occurred. (or similar message)</entry>
                            <entry>
                                <p>1.  Try to boot an ALS Installer image (make sure you open up port 22 in the default security group first) in the Nova Instances tab.</p>
                                <p>2. If the image doesn't boot, the image is broken (check the size) or Nova is broken.</p>
                                <p>3. If the image boots and says it's running, try to SSH into it. If you can't SSH, check the instance's console log in the Horizon Instances UI.  If you see a message about "unable to contact metadata server, falling back", the Nova Metadata service is broken.</p>
                                <p>4. If you can SSH in successfully, re-try cluster setup; the cause may be intermittent failures in Horizon/Nova.</p>
                            </entry>
                        </row>
                        <row>
                            <entry>Failure in building cluster step</entry>
                            <entry>Cluster stays in BUILDING state for an extremely long time, or drops to ERROR state.<p>OR</p>
                                <p/>The ALS installer log on  the Installer VM reports 'No route to host'.</entry>
                            <entry>
                                <p>1. Assign a floating IP to the constructor instance and try SSHing to it. </p>
                                <p>2. If you can't SSH, check the instance's console log in the Horizon Instances UI. If you see a message about "unable to contact metadata server, falling back", the Nova metadata service is broken.</p>
                                <p>3. Boot a couple of other installer images or Debian images in the same network and try to ssh between them.  If you get the "No route to host" error message, Neutron networking is broken.</p>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section id="disable"> <title>Disable Self-destruction</title>
            <p>Add this option to the <i>cloud-init</i> JSON file to prevent the CVM from self-destructing at the end of the Helion ALS construction process.</p>
            <codeblock>"Control": {
    "terminate_constructor": "False"
}</codeblock>
        </section>
        <section id="logfile"> <title>CVM Logfile Location</title>
            <p>The CVM creates a log file during the construction process. To view this log, SSH into the CVM and open the following file:</p>
            <codeblock>/tmp/assemble_log.txt</codeblock>
        </section>
    </body>
</topic>
