<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_f2m_l1q_h5">
  <title>HPE Helion Development Platform 2.0: Upgrading HPE Helion <tm tmtype="reg">OpenStack</tm> to
    Version 2.1</title>
  <body>
    <p>When upgrading HPE Helion OpenStack from version 2.0 to 2.1, shutting down the virtual
      machines which run the control plane will also affect the services that make up the HPE Helion
      Development Platform. Perform these additional steps to safely shut down these specific
      services prior to upgrading and then to restart them after the upgrade is complete. <note>This
        is not an upgrade for the HPE Helion Development Platform. It does not add any new
        functionality or change existing functionality.  The process documented here ensures that
        the HPE Helion Development Platform is shut down and restarted safely when performing the
        latest upgrade to HPE Helion OpenStack. If your HPE Helion OpenStack installation does not
        include the HPE Helion Development Platform, this process does not apply to you.</note></p>
    
    
    
    
  </body>
  <topic id="beforeupgrading">  <title>Before Upgrading</title>
    <body>    
      <section>
        <title>Application Lifecycle Service</title>
        <p>No additional steps are required prior to upgrading HPE Helion OpenStack.</p>
      </section>
      
      
      <section><title>Database Service</title><p>The database instances and clusters must be gracefully stopped manually prior to upgrading HPE
        Helion OpenStack.<ol id="ol_u4h_54h_45">
          <li>Download the <xref href="http://docs.hpcloud.com/media/devplat.docs/DevelopmentPlatformUpgrade-2.1.tar.gz"
            format="gz" scope="external">upgrade scripts</xref> (14.9 kb).<note type="tip">The
              easiest option is to download directly to the physical machine hosting the HPE Helion
              OpenStack lifecycle manager. If you can not download directly to that location,
              download the files to portable storage media and then copy the files onto the
              lifecycle manager. When downloading or copying, make sure there is enough space; the
              file sizes can be significant. </note></li>
          <li>SSH to the HPE Helion OpenStack lifecycle manager (previously known as the deployer node). </li>
          <li>Create a virtual environment for extracting and sourcing the upgrade.<ol
                id="ol_jgw_jff_55">
                <li>Decompress the downloaded file
                    (<codeph>DevelopmentPlatformUpgrade-2.1.tar.gz</codeph>) to a local temp
                  directory.
              <codeblock>tar -xzf DevelopmentPlatformUpgrade-2.1.tar.gz </codeblock></li>
                <li>Source a virtual environment containing the OpenStack clients. Best practice is
                  to use the built-in virtual environment on the HPE Helion OpenStack lifecycle
                  manager, as follows:<ol id="ol_i4x_51w_45">
                    <li>List all available virtual environments.
                      <codeblock>ls /opt/stack/venv</codeblock></li>
                    <li> One of the names in that list will look like:
                          <codeph>openstackclient-<i>&lt;timestamp></i></codeph>. Copy the entire
                      virtual environment name, including the timestamp value, for use in the next
                      step.</li>
                    <li>Source the virtual
                      environment.<codeblock>source /opt/stack/venv/<i>&lt;VirtualEnvironmentName></i>/bin/activate </codeblock></li>
                  </ol></li>
              </ol></li>
          
          <li>Execute the following command to source credentials with access to the service.
            <codeblock>source service.osrc</codeblock></li>
          <li>Disable access to the Trove API. This will stop all
            activity.<codeblock>ansible-playbook --private-key &lt;path to SSH private key> -i ./common_upgrade/inventory/inventory.py ./control_plane_upgrade/playbooks/stop-api.yml </codeblock><note
              type="tip">The SSH private key file is the one that was specified during installation
              of the database service. This same key will be used for all commands in this
              guide.</note>
          </li>
          <li>Safely stop all guest databases and
            clusters.<codeblock>ansible-playbook --extra-vars guest_private_key_file=&lt;path to SSH private key> --private-key &lt;path to SSH private key> -i ./common_upgrade/inventory/inventory.py ./guest-upgrade/playbooks/stop-guests.yml </codeblock><note
              type="important">Once the guest database instances and clusters are stopped, they
              will become inaccessible to applications that use them until they are <xref
                href="#afterupdating/restart" format="dita">restarted</xref>. Plan this outage
              window ahead of time and notify your users in advance.</note></li>
          <li>Safely stop the Trove services
            .<codeblock>ansible-playbook --private-key &lt;path to SSH private key> -i ./common_upgrade/inventory/inventory.py ./control_plane_upgrade/playbooks/control_plane_stop.yml </codeblock></li>
          <li>Safely stop all control plane
            instances.<codeblock> ./control_plane_upgrade/scripts/stop_control_plane_instances.bash</codeblock></li>
        </ol></p></section>
      <section>
        <title>HPE Helion Code Engine</title><p>No additional steps are required prior to upgrading HPE Helion OpenStack.</p>
      </section>
      <section>
        <title>Messaging Service</title><p>No additional steps are required prior to upgrading HPE Helion OpenStack.</p>
      </section>
    </body>
  </topic>
  
  
  <topic id="updateToHos">
    <title>Upgrade HPE Helion OpenStack to version 2.1</title><body><p>For complete instructions on how to upgrade HPE Helion OpenStack, see the <xref
      href="http://docs.hpcloud.com/#helion/installation/upgrade.html" format="html"
      scope="external">Upgrade Documentation</xref>. </p></body>
  </topic>
  
  <topic id="afterupdating">
    <title>After Upgrading</title>
    <body>
      
      <section>
        <title>Application Lifecycle Service</title>
        <p>If any ALS clusters do not restart after the HPE Helion OpenStack upgrade is completed,
          perform the following steps.</p>
        <ol id="ol_eph_xxg_45">
          <li> Start core node.</li>
          <li> Start secondary controller nodes.</li>
          <li> Start secondary routers.</li>
          <li> Start service broker nodes.</li>
          <li> Start DEAs.</li>
        </ol>
      </section>
      
      <section>
        <title>Database Service</title>
        <p>The database instances and clusters must be restarted safely after upgrading HPE Helion
          OpenStack.</p>
        <note>It is recommended that you delete any Nova instances named <codeph>hot_pools</codeph>;
          do not delete instances that include any additional naming to
          <codeph>hot_pools</codeph>.</note>
        <note>The <codeph>--private key</codeph> is the value specified for the
            <codeph>keypair</codeph> parameter in the <xref
            href="installation/cloud/cloud_database.dita#cloudDatabase/keypair">clouds.yaml
            file</xref>, which is located at <codeph>~/.config/openstack/clouds.yaml</codeph>. For
          these steps, use the actual path and filename for the private key; it will typically have
          a <codeph>.pem</codeph> or <codeph>.key</codeph> extension, depending on how it was
          created.</note>
        <p><ol id="ol_n1n_v4h_45">
          <li>Restart all control plane
            instances.<codeblock>./control_plane_upgrade/scripts/start_control_plane_instances.bash </codeblock></li>
          <li>Safely start the Trove
            services.<codeblock>ansible-playbook --private-key &lt;path to SSH private key> -i ./common_upgrade/inventory/inventory.py ./control_plane_upgrade/playbooks/control_plane_start.yml</codeblock><note
              type="tip">If any of the services do not restart [FAILED = 1], add floating IPs to all
              the instances in the Database control plane and run this playbook again. These
              instances are created during installation and can be accessed through the Horizon
              dashboard or Nova client.</note></li>
          <li id="restart">Start all database instances and clusters. This script may take some time to fully
            execute.<codeblock>ansible-playbook --extra-vars guest_private_key_file=&lt;path to SSH private key> --private-key &lt;path to SSH private key> -i ./common_upgrade/inventory/inventory.py ./guest-upgrade/playbooks/start-guests.yml </codeblock></li>
          <li>Verify that all guest instances were restarted successfully.
            <codeblock>cat ~/guest-instance-status.log </codeblock></li>
          <li>Restart the Database API service. After this step the database service will be fully
            functional.<codeblock>ansible-playbook --private-key &lt;path to SSH private key> -i ./common_upgrade/inventory/inventory.py ./control_plane_upgrade/playbooks/start-api.yml</codeblock></li>
        </ol></p></section>
      
      <section>
        <title>HPE Helion Code Engine</title>
        <p>All nodes are rebooted during the upgrade. The platform services need to be restarted in a specific order.</p>
        <ol>
          <li>If unknown, determine the IP address of the <codeph>helionce_deployer</codeph>
            instance. <ol id="ol_zsn_yxt_s5">
              <li> From the HPE Helion OpenStack lifecycle manager, list all available machines.
                <codeblock>source helionce.osrc
openstack server list</codeblock></li>
              <li>Find the instance named <codeph>helionce_deployer</codeph> in the list and make a
                note of its IP address. </li>
            </ol></li><li>SSH into the <codeph>helionce_deployer</codeph>
              instance.<codeblock>ssh -i helionce-shared stack@&lt;<i>IP address of the helionce_deployer instance</i>></codeblock></li>
          <li>Navigate to the <codeph>/home/stack/scratch/ansible/next/hos/ansible</codeph>
            folder.</li> 

  <li>Run the following
            playbooks:<codeblock>ansible-playbook -i hosts/verb_hosts FND-CLU-start.yml</codeblock><codeblock>ansible-playbook -i hosts/verb_hosts percona-bootstrap.yml</codeblock><codeblock>ansible-playbook -i hosts/verb_hosts rabbitmq-start.yml</codeblock><codeblock>ansible-playbook -i hosts/verb_hosts helionci-restart.yml</codeblock></li></ol>
      </section> 
      
      
      <section><title>Messaging Service</title>
        <p> After the HPE Helion OpenStack upgrade is completed, perform these steps to bring up the
          messaging control plane.</p>
        <ol id="ol_srh_xxg_45">
          <li>SSH into the HPE Helion OpenStack lifecycle manager.
            <codeblock>ssh stack@&lt;hos-deployer-ip></codeblock></li>
          <li>From the HPE Helion OpenStack lifecycle manager, SSH into the Messaging deployer node.
            This was <xref href="installation/devplatform_install_messaging.dita">created during
              installation</xref> of the Messaging
            service.<codeblock>ssh stack@&lt;messaging-deployer-ip></codeblock></li>
          <li>Navigate to the <codeph>ansible</codeph> scratch directory.
            <codeblock>cd scratch/ansible/next/hos/ansible/</codeblock></li>
          <li>Run the following playbooks in this order.
            <codeblock>ansible-playbook -i hosts/verb_hosts FND-CLU-start.yml</codeblock>
            <codeblock>ansible-playbook -i hosts/verb_hosts percona-bootstrap.yml</codeblock>
            <note><p>In most cases, you will need to press <b>^C</b> and <b>c</b> and <b>return</b> to continue during
                the above playbook (The text on the console gives the impression it will time out
                after 10 minutes and continue; it will not time out, but instead will wait forever.) </p><p>This procedure assumes that the database that exists on <codeph>msgaas-msgaas-ccp-c1-m1-mgmt</codeph> is the latest; 
              the database server (mysqld) on <codeph>msgaas-msgaas-ccp-c1-m1-mgmt</codeph> should be the last mysqld in your Percona
              cluster to shutdown, and therefore the host with the latest sequence number. </p>
              <p>The sequence number on a host can be found using: <codeph>$ sudo cat /var/lib/mysql/grastate.dat</codeph></p>
              <p>If the sequence number is -1 in this file, use <codeph>$ sudo /usr/bin/mysqld_safe --wsrep-recover</codeph> when mysqlid is down; this logs the sequence number to <codeph>/var/log/mysql/error.log</codeph>.</p>
              <p>If <codeph>msgaas-msgaas-ccp-c1-m1-mgmt</codeph> does not have the latest sequence number from the list of the
                above controllers then DO NOT use this procedure to bootstrap.</p></note>
            <codeblock>ansible-playbook -i hosts/verb_hosts cue-stop.yml</codeblock>
            <codeblock>ansible-playbook -i hosts/verb_hosts cue-start.yml</codeblock></li>
          <li>Disconnect from the Messaging deployer node and HPE Helion OpenStack lifecycle manager
            node.</li></ol>
        
        
        <p>After
          the HPE Helion OpenStack upgrade is completed, perform these steps to bring up the tenant
          RabbitMQ Clusters. </p><note>If you did not previously deploy any RabbitMQ clusters, the
            following steps do not apply to your environment.</note>
        <note>This section is only necessary if you installed Messaging Service from the <b>msgaas_1.0.0-02-165.csu</b> package. If you installed from <b>msgaas_1.0.1-02-462.csu</b>, these steps do not apply.</note>
        <ol id="ol_r5h_xxg_45">
          <li>SSH into the HPE Helion OpenStack lifecycle manager.
            <codeblock>ssh stack@&lt;hos-deployer-ip></codeblock></li>
          <li>From the HPE Helion OpenStack lifecycle manager, SSH into the Messaging deployer
            node. This was <xref href="installation/devplatform_install_messaging.dita">created
              during installation</xref> of the Messaging
            service.<codeblock>ssh stack@&lt;messaging-deployer-ip></codeblock></li>
          <li>Navigate to the <codeph>ansible</codeph> scratch directory.
            <codeblock>cd scratch/ansible/next/hos/ansible/</codeblock></li>
          <li>Run the RabbitMQ cluster recovery script.<ol id="ol_npz_5zs_35">
            <li>Copy <xref href="installation/cue_rabbit_fix_script.dita">this codeblock</xref>
              into a plaintext file and save it as <codeph>cue-rabbit-fix.sh</codeph></li>
            <li>Copy the script file into this directory on the messaging
              deployer.<codeblock> /home/stack/scratch/ansible/next/hos/ansible</codeblock></li>
            <li>Make the script executable.
              <codeblock>chmod +x cue-rabbit-fix.sh</codeblock></li>
            <li>Execute the script to bring all your RabbitMQ clusters
              online.<codeblock>./cue-rabbit-fix.sh</codeblock></li>
          </ol></li>
          <li>Verify Installation <ol id="ol_axh_xxg_45">
            <li>Set endpoint type to <codeph>internal</codeph>. (The public endpoint cannot be
              reached from the messaging
              deployer.)<codeblock>export OS_ENDPOINT_TYPE=internalURL
export OS_INTERFACE=internal</codeblock></li>
            <li>List all clusters. <note>Since you have not yet created any clusters, this list
              of clusters will be empty, but it should execute without returning any error
              messages.
            </note><codeblock>stack@messaging-deployer:~/scratch/ansible/next/hos/ansible$ /opt/stack/service/cueclient/venv/bin/openstack message-broker cluster list</codeblock></li>
            <li>If you have configured TLS, make sure that the Cue public endpoint begins with
              <codeph>https</codeph> and not just
              <codeph>http</codeph>:<codeblock>openstack catalog list</codeblock></li>
          </ol></li>
          <li>Disconnect from the Messaging deployer node and HPE Helion OpenStack lifecycle
            manager node.</li></ol>
        
      </section>
      
      
    </body>
  </topic>
</topic>
