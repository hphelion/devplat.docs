<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_f2m_l1q_h5">
  <title>HPE Helion 2.0 Development Platform: Upgrading HPE Helion <tm tmtype="reg">OpenStack</tm> to
    Version 2.1</title>
  <body>
    <p>When upgrading HPE Helion OpenStack from version 2.0 to 2.1, shutting down the virtual
      machines which run the control plane will also affect the services that make up the HPE Helion
      Development Platform. </p>
    <p>Perform these additional steps to safely shut down these specific services prior to upgrading
      and then to restart them after the upgrade is complete.</p>
   
    

    
  </body>
<topic id="beforeupgrading">  <title>Before Upgrading</title>
<body>    
    <section>
      <title>Application Lifecycle Service</title>
      <p>No additional steps are required prior to upgrading HPE Helion OpenStack.</p>
    </section>
    
    
    <section><title>Database Service</title><p>The database instances and clusters must be gracefully stopped manually prior to upgrading HPE
      Helion OpenStack.<ol id="ol_u4h_54h_45">
        <li>Download the <xref href="http://docs-staging.hpcloud.com/devplat.docs-bundle-2015-may/media/DevelopmentPlatformUpgrade-2.1.tar.gz"
          format="gz" scope="external">upgrade scripts</xref> (14.9 kb).<note type="tip">The
            easiest option is to download directly to the physical machine hosting the HPE Helion
            OpenStack lifecycle manager. If you can not download directly to that location,
            download the files to portable storage media and then copy the files onto the
            lifecycle manager. When downloading or copying, make sure there is enough space; the
            file sizes can be significant. </note></li>
        <li>SSH to the HPE Helion OpenStack lifecycle manager (previously known as the deployer node). </li>
        <li>Decompress the downloaded file (<codeph>DevelopmentPlatformUpgrade-2.1.tar.gz</codeph>) to a local temp directory.<codeblock>tar -xzf DevelopmentPlatformUpgrade-2.1.tar.gz </codeblock></li>
        <li>Source a virtual environment containing the OpenStack clients. Best practice is to use the built-in virtual environment on the HPE Helion OpenStack lifecycle manager, as follows:<ol id="ol_i4x_51w_45">
          <li>List all available virtual environments.
            <codeblock>ls /opt/stack/venv</codeblock></li>
          <li> One of the names in that list will look like:
            <codeph>openstackclient-<i>&lt;timestamp></i></codeph>. Copy the entire virtual environment name, including the timestamp value, for use in the next step.</li>
          <li>Source the virtual environment.<codeblock>source /opt/stack/venv/<i>&lt;VirtualEnvironmentName></i>/bin/activate </codeblock></li>
        </ol></li>
        <li>Execute the following command to source credentials with access to the service.
          <codeblock>source service.osrc</codeblock></li>
        <li>Disable access to the Trove API. This will stop all
          activity.<codeblock>ansible-playbook --private-key &lt;path to SSH private key> -i ./common_upgrade/inventory/inventory.py ./control_plane_upgrade/playbooks/stop-api.yml </codeblock><note
            type="tip">The SSH private key file is the one that was specified during installation
            of the database service. This same key will be used for all commands in this
            guide.</note>
        </li>
        <li>Safely stop all guest databases and
                clusters.<codeblock>ansible-playbook --extra-vars guest_private_key_file=&lt;path to SSH private key> --private-key &lt;path to SSH private key> -i ./common_upgrade/inventory/inventory.py ./guest-upgrade/playbooks/stop-guests.yml </codeblock><note
                type="important">Once the guest database instances and clusters are stopped, they
                will become inaccessible to applications that use them until they are <xref
                  href="#afterupdating/restart" format="dita">restarted</xref>. Plan this outage
                window ahead of time and notify your users in advance.</note></li>
        <li>Safely stop the Trove services
          .<codeblock>ansible-playbook --private-key &lt;path to SSH private key> -i ./common_upgrade/inventory/inventory.py ./control_plane_upgrade/playbooks/control_plane_stop.yml </codeblock></li>
        <li>Safely stop all control plane
          instances.<codeblock> ./control_plane_upgrade/scripts/stop_control_plane_instances.bash</codeblock></li>
      </ol></p></section>
    <section>
      <title>HPE Helion Code Engine</title><p>No additional steps are required prior to upgrading HPE Helion OpenStack.</p>
    </section>
    <section>
      <title>Messaging Service</title><p>No additional steps are required prior to upgrading HPE Helion OpenStack.</p>
    </section>
  </body>
</topic>
  
  
  <topic id="updateToHos">
    <title>Upgrade HPE Helion OpenStack to version 2.1</title><body><p>For complete instructions on how to upgrade HPE Helion OpenStack, see the <xref
          href="http://docs.hpcloud.com/#helion/installation/upgrade.html" format="html"
          scope="external">Upgrade Documentation</xref>. </p></body>
  </topic>
  
  <topic id="afterupdating">
    <title>After Upgrading</title>
    <body>
      
      <section>
        <title>Application Lifecycle Service</title>
        <p>If any ALS clusters do not restart after the HPE Helion OpenStack upgrade is completed,
          perform the following steps.</p>
        <ol id="ol_eph_xxg_45">
          <li> Start core node.</li>
          <li> Start secondary controller nodes.</li>
          <li> Start secondary routers.</li>
          <li> Start service broker nodes.</li>
          <li> Start DEAs.</li>
        </ol>
      </section>
      
      <section>
        <title>Database Service</title>
        <p>The database instances and clusters must be restarted safely after upgrading HPE Helion
          OpenStack.</p>
        <note>It is recommended to delete nova instances that are named hot_pools; do not delete instances that include any additional naming to hot_pools</note>
        <p><ol id="ol_n1n_v4h_45">
          <li>Restart all control plane
            instances.<codeblock>./control_plane_upgrade/scripts/start_control_plane_instances.bash </codeblock></li>
          <li>Safely start the Trove
            services.<codeblock>ansible-playbook --private-key &lt;path to SSH private key> -i ./common_upgrade/inventory/inventory.py ./control_plane_upgrade/playbooks/control_plane_start.yml</codeblock><note
              type="tip">If any of the services do not restart [FAILED = 1], add floating IPs to all
              the instances in the Database control plane and run this playbook again. These
              instances are created during installation and can be accessed through the Horizon
              dashboard or Nova client.</note></li>
          <li id="restart">Start all database instances and clusters. This script may take some time to fully
            execute.<codeblock>ansible-playbook --extra-vars guest_private_key_file=&lt;path to SSH private key> --private-key &lt;path to SSH private key> -i ./common_upgrade/inventory/inventory.py ./guest-upgrade/playbooks/start-guests.yml </codeblock></li>
          <li>Verify that all guest instances were restarted successfully.
            <codeblock>cat ~/guest-instance-status.log </codeblock></li>
          <li>Restart the Database API service. After this step the database service will be fully
            functional.<codeblock>ansible-playbook --private-key &lt;path to SSH private key> -i ./common_upgrade/inventory/inventory.py ./control_plane_upgrade/playbooks/start-api.yml</codeblock></li>
        </ol></p></section>
      
      
      <section>
        <title>HPE Helion Code Engine</title>
      </section>
      
      
      
      <section><title>Messaging Service</title>
        <p> After the HPE Helion OpenStack upgrade is completed, perform these steps to bring up the
          messaging control plane.</p>
        <ol id="ol_srh_xxg_45">
          <li>SSH into the HPE Helion OpenStack lifecycle manager.
            <codeblock>ssh stack@&lt;hos-deployer-ip></codeblock></li>
          <li>From the HPE Helion OpenStack lifecycle manager, SSH into the Messaging deployer node.
            This was <xref href="installation/devplatform_install_messaging.dita">created during
              installation</xref> of the Messaging
            service.<codeblock>ssh stack@&lt;messaging-deployer-ip></codeblock></li>
          <li>Navigate to the <codeph>ansible</codeph> scratch directory.
            <codeblock>cd scratch/ansible/next/hos/ansible/</codeblock></li>
          <li>Run the following playbooks in this order.
            <codeblock>ansible-playbook -i hosts/verb_hosts FND-CLU-start.yml
ansible-playbook -i hosts/verb_hosts percona-bootstrap.yml
ansible-playbook -i hosts/verb_hosts cue-stop.yml
ansible-playbook -i hosts/verb_hosts cue-start.yml</codeblock></li>
          <li>Disconnect from the Messaging deployer node and HPE Helion OpenStack lifecycle manager
            node.</li></ol>
        
        
        <p>After
          the HPE Helion OpenStack upgrade is completed, perform these steps to bring up the tenant
          RabbitMQ Clusters. </p><note>If you did not previously deploy any RabbitMQ clusters, the
            following steps do not apply to your environment.</note>
        <ol id="ol_r5h_xxg_45">
          <li>SSH into the HPE Helion OpenStack lifecycle manager.
            <codeblock>ssh stack@&lt;hos-deployer-ip></codeblock></li>
          <li>From the HPE Helion OpenStack lifecycle manager, SSH into the Messaging deployer
            node. This was <xref href="installation/devplatform_install_messaging.dita">created
              during installation</xref> of the Messaging
            service.<codeblock>ssh stack@&lt;messaging-deployer-ip></codeblock></li>
          <li>Navigate to the <codeph>ansible</codeph> scratch directory.
            <codeblock>cd scratch/ansible/next/hos/ansible/</codeblock></li>
          <li>Run the RabbitMQ cluster recovery script.<ol id="ol_npz_5zs_35">
            <li>Copy <xref href="installation/cue_rabbit_fix_script.dita">this codeblock</xref>
              into a plaintext file and save it as <codeph>cue-rabbit-fix.sh</codeph></li>
            <li>Copy the script file into this directory on the messaging
              deployer.<codeblock> /home/stack/scratch/ansible/next/hos/ansible</codeblock></li>
            <li>Make the script executable.
              <codeblock>chmod +x cue-rabbit-fix.sh</codeblock></li>
            <li>Execute the script to bring all your RabbitMQ clusters
              online.<codeblock>./cue-rabbit-fix.sh</codeblock></li>
          </ol></li>
          <li>Verify Installation <ol id="ol_axh_xxg_45">
            <li>Set endpoint type to <codeph>internal</codeph>. (The public endpoint cannot be
              reached from the messaging
              deployer.)<codeblock>export OS_ENDPOINT_TYPE=internalURL
export OS_INTERFACE=internal</codeblock></li>
            <li>List all clusters. <note>Since you have not yet created any clusters, this list
              of clusters will be empty, but it should execute without returning any error
              messages.
            </note><codeblock>stack@messaging-deployer:~/scratch/ansible/next/hos/ansible$ /opt/stack/service/cueclient/venv/bin/openstack message-broker cluster list</codeblock></li>
            <li>If you have configured TLS, make sure that the Cue public endpoint begins with
              <codeph>https</codeph> and not just
              <codeph>http</codeph>:<codeblock>openstack catalog list</codeblock></li>
          </ol></li>
          <li>Disconnect from the Messaging deployer node and HPE Helion OpenStack lifecycle
            manager node.</li></ol>
        
      </section>
      
      
    </body>
  </topic>
</topic>
